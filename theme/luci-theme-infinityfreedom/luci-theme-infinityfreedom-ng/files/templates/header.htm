<%#
	
	InfinityFreedom-NG (Next Generation) is a clean HTML5 theme for LuCI.

	luci-theme-infinityfreedom-ng
	Copyright 2024 Eric <xiaoqingfengatgm@gmail.com>

	Have a bug? Please create an issue here on GitHub!
	https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom/issues
	
	Licensed to the public under the Apache License 2.0
-%>
<%
	local ver = require "luci.version"
	local sys  = require "luci.sys"
	local util = require "luci.util"
	local http = require "luci.http"
	local disp = require "luci.dispatcher"

	local boardinfo = util.ubus("system", "board")
	local boardinfo={}
	boardinfo.hostname=sys.hostname()
	
	local request  = disp.context.path
	local request2 = disp.context.request

	local category = request[1]
	local cattree  = category and disp.node(category)

	local leaf = request2[#request2]

	local tree = disp.node()
	local node = disp.context.dispatched

	local categories = disp.node_childs(tree)

	local c = tree
	local i, r

	-- tag all nodes leading to this page
	for i, r in ipairs(request) do
		if c.nodes and c.nodes[r] then
			c = c.nodes[r]
			c._menu_selected = true
		end
	end

	-- send as HTML5
	http.prepare_content("text/html")

	local function nodeurl(prefix, name, query)
		local u = url(prefix, name)
		if query then
			u = u .. http.build_querystring(query)
		end
		return pcdata(u)
	end

	local function render_subtabmenu_asJson(prefix, node, level)
		if not level then
			level = 1
		end

		local childs = disp.node_childs(node)
		if #childs > 0 then
			if level > 2 then
				write('var level%sMenu=[' %{level})
			end

			local selected_node
			local selected_name
			local i, v

			for i, v in ipairs(childs) do
				local nnode = node.nodes[v]
				if nnode._menu_selected then
					selected_node = nnode
					selected_name = v
				end

				if level > 2 then
					write('{')
					write('"name":"%s",' %{v})
					write('"active":%s,' %{(nnode._menu_selected or (node.leaf and v == leaf)) and 'true' or 'false'})
					write('"href":"%s",' %{nodeurl(prefix, v, nnode.query)})
					write('"title":"%s"' %{striptags(translate(nnode.title))})
					write('}')

					if next(childs,i) ~= nil then 
						write(',')
					end
				end
			end

			if level > 2 then
				write('];')
			end

			if selected_node then
				render_subtabmenu_asJson(prefix .. "/" .. selected_name, selected_node, level + 1)
			end
		end
	end

	local function render_tabmenu_asJson(prefix, node, level)
		if not level then
			level = 1
		end

		local childs = disp.node_childs(node)
		if #childs > 0 then
			if level > 2 then
				write('var level%sMenu=[' %{level})
			end

			local selected_node
			local selected_name
			local i, v

			for i, v in ipairs(childs) do
				local nnode = node.nodes[v]
				if nnode._menu_selected then
					selected_node = nnode
					selected_name = v
				end

				if level > 2 then
					write('{')
					write('"name":"%s",' %{v})
					write('"active":%s,' %{(nnode._menu_selected or (node.leaf and v == leaf)) and 'true' or 'false'})
					write('"href":"%s",' %{nodeurl(prefix, v, nnode.query)})
					write('"title":"%s"' %{striptags(translate(nnode.title))})
					write('}')

					if next(childs,i) ~= nil then 
						write(',')
					end
				end
			end

			if level > 2 then
				write('];')
			end

			if selected_node then
				render_subtabmenu_asJson(prefix .. "/" .. selected_name, selected_node, level + 1)
			end
		end
	end

	local function render_submenu_asJson(prefix, node)
		local childs = disp.node_childs(node)
		if #childs > 0 then
			write(',"subs": [')

			for i, r in ipairs(childs) do
				local nnode = node.nodes[r]
				local title = pcdata(striptags(translate(nnode.title)))
				write('{"data-title":"%s",' %{title})
				write('"href":"%s",' %{nodeurl(prefix, r, nnode.query)})
				write('"title":"%s"}' %{title})

				if next(childs,i) ~= nil then 
					write(',')
				end
			end

			write(']')
		end
	end

	local function render_topmenu_asJson()
		-- write('<script>')
		write('var topMenu = {"menus":[')
		local childs = disp.node_childs(cattree)
		if #childs > 0 then
			for i, r in ipairs(childs) do
				write('{')
				local nnode = cattree.nodes[r]
				local grandchildren = disp.node_childs(nnode)

				if #grandchildren > 0 then
					local title = pcdata(striptags(translate(nnode.title)))

					write('"data-title":"%s",' %{pcdata(striptags(nnode.title))})
					write('"title":"%s"' %{title})

					render_submenu_asJson(category .. "/" .. r, nnode)
				else
					local title = pcdata(striptags(translate(nnode.title)))

					write('"data-title":"%s",' %{pcdata(striptags(nnode.title))})
					write('"href":"%s",' %{nodeurl(category, r, nnode.query)})
					write('"title":"%s"' %{title})
				end
				write('}')
				if next(childs,i) ~= nil then 
					write(',')
				end
			end
		end
		write(']}')
		-- write('</script>')
	end

	local function render_changes_asJson()
		-- calculate the number of unsaved changes
		if tree.nodes[category] and tree.nodes[category].ucidata then
			local ucichanges = 0

			for i, j in pairs(require("luci.model.uci").cursor():changes()) do
				for k, l in pairs(j) do
					for m, n in pairs(l) do
						ucichanges = ucichanges + 1;
					end
				end
			end

			if ucichanges > 0 then
				-- write('<script>')
				write('var unsavedChanges={"href":"%s?redir=%s","title":"%s: %d","count":%d}' %{
					url(category, 'uci/changes'),
					http.urlencode(http.formvalue('redir') or table.concat(disp.context.request, "/")),
					translate('Unsaved Changes'),
					ucichanges,
					ucichanges
				})
				-- write('</script>')
			end
		end
	end

	local function exec_command(command)
		local handle = io.popen(command)
		local result = handle:read("*a")  -- 读取所有输出
		handle:close()
		return result
	end

	local function detectAdGuardHome()
		local host = exec_command("uci show network | grep network.lan.ipaddr|cut -d \"'\" -f 2")
		if #host > 0 then
			host = host:gsub("[\r\n]", "")
		end
		local adGuardUrl = "http://" .. host .. ":3000"
		local adGuardHomeRespCode = exec_command("wget --server-response --spider \"" .. adGuardUrl .. "\" 2>&1 | awk '/HTTP\\// {print $2; exit}'")
		if adGuardHomeRespCode~=nil and #adGuardHomeRespCode > 0 then
			write("const RouterHost=\"" .. host .. "\", AdGuardReady = true, AdGuardUrl = \"" .. adGuardUrl .. "\";")
		end
	end
-%>
<!DOCTYPE html>
<html lang="<%=luci.i18n.context.lang%>">

<head>

    <meta charset="utf-8" />
    <title><%=striptags( (boardinfo.hostname or "?") .. ( (node and node.title) and ' - ' .. translate(node.title) or '')) %> - LuCI</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="A theme customized for Homelede, also applicable to other OpenWrt distributions" name="description" />
    <meta content="xiaoqingfengatgm@gmail.com" name="author" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />

	<meta name="application-name" content="<%=striptags( (boardinfo.hostname or "?") ) %> - LuCI">
	<meta name="apple-mobile-web-app-title" content="<%=striptags( (boardinfo.hostname or "?") ) %> - LuCI">
	<meta name="msapplication-TileImage" content="<%=media%>/logo.png"/>
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"/>
	<meta name="format-detection" content="telephone=no, email=no"/>
	<meta name="apple-mobile-web-app-capable" content="yes">
	<meta name="mobile-web-app-capable" content="yes">
	<meta name="x5-fullscreen" content="true">
	<meta name="full-screen" content="yes">
	<meta name="x5-page-mode" content="app">
	<meta name="browsermode" content="application">
	<meta name="theme-color" content="#0099CC">
	<meta name="msapplication-tap-highlight" content="no">
	<meta name="msapplication-TileColor" content="#0099CC">
	<link rel="icon" href="<%=media%>/logo.png" sizes="144x144">
	<link rel="apple-touch-icon-precomposed" href="<%=media%>/logo.png" sizes="144x144">

    <!-- App favicon -->
    <link rel="shortcut icon" href="<%=media%>/assets/images/favicon.ico">

    <!-- App css -->
    <link href="<%=media%>/assets/css/bootstrap.min.css" rel="stylesheet" type="text/css" id="bs-default-stylesheet" />
    <link href="<%=media%>/assets/css/app.min.css" rel="stylesheet" type="text/css" id="app-default-stylesheet" />

    <link href="<%=media%>/assets/css/bootstrap-dark.min.css" rel="stylesheet" type="text/css" id="bs-dark-stylesheet" />
    <link href="<%=media%>/assets/css/app-dark.min.css" rel="stylesheet" type="text/css" id="app-dark-stylesheet" />

    <!-- icons -->
    <link href="<%=media%>/assets/css/icons.min.css" rel="stylesheet" type="text/css" />

	<link href="<%=media%>/assets/css/ng.css" rel="stylesheet" type="text/css" />

	<% if node and node.css then %>
		<link rel="stylesheet" href="<%=resource%>/<%=node.css%>">
	<% end -%>
	<% if css then %>
		<style title="text/css"><%= css %></style>
	<% end -%>

	<script src="<%=resource%>/xhr.js"></script>
	<!-- Vendor js -->
	<script src="<%=media%>/assets/js/vendor.min.js"></script>
	<script src="<%=media%>/assets/js/vue.global.prod.js"></script>

	<script src="<%=media%>/assets/js/lottie.min.js"></script>

	<script>
	<% render_changes_asJson() %>
	
	const menuIconDef = [
		{
			"data-title": "Status",
			"icon": "fe-activity",
		},
		{
			"data-title": "System",
			"icon": "fe-settings",
		},
		{
			"data-title": "Docker",
			"icon": "fe-disc",
		
		},
		{
			"data-title": "Services",
			"icon": "fe-codepen",
		},
		{
			"data-title": "NAS",
			"icon": "fe-cloud-snow",
		},
		{
			"data-title": "Control",
			"icon": "dripicons-toggles",
		},
		{
			"data-title": "VPN",
			"icon": "dripicons-link",
		},
		{
			"data-title": "dns",
			"icon": "mdi mdi-dns",
		},
		{
			"data-title": "Network",
			"icon": "fe-globe",
		},
		{
			"data-title": "Statistics",
			
			"icon": "dripicons-graph-pie",
		},
		{
			"data-title": "Bandwidth Monitor",
			"icon": "dripicons-camcorder",
		}
	];
	const iconMap = new Map();
	for(let i = 0; i < menuIconDef.length; i++) {
    	let item = menuIconDef[i]
		iconMap.set(item["data-title"], item["icon"])
	}

	<% render_topmenu_asJson() %>
	<% 
		if category then
			render_tabmenu_asJson(category, cattree)
		end 
	-%>

	topMenu.menus = topMenu.menus.filter(item => item["data-title"] !== "Logout");

	topMenu.menus.forEach(function(item,index,self){
		//item 遍历出的每一个元素
		//index 元素对应的下标
		//self 数组本身
		let title = item["data-title"]
		let icon = iconMap.get(title)
		if (icon != undefined) {
			item["icon"] = icon
		} 
	})

	<% detectAdGuardHome() %>

	if(typeof(AdGuardReady)!="undefined" && AdGuardReady)
	{
		topMenu.menus.forEach(menu => {
			if(menu["data-title"]=="dns") {
				menu["subs"].push(
					{
					"data-title": "AdGuardHome",
					"href": AdGuardUrl,
					"title": "AdGuardHome"
					}
				)
			}
		});
	}

	var luciLocation = <%= luci.http.write_json(luci.dispatcher.context.path) %>;
	var selectedMenu = null;
	function findSelectedMenu() {
		let searchPattern = '/' + luciLocation[0] + '/' + luciLocation[1]+ '/' + luciLocation[2];
		for(var item of topMenu.menus) {
			if(Object.hasOwn(item, 'subs'))
			{
				let found = false;
				for(var it of item.subs)
				{
					if(it["href"] && it["href"].indexOf(searchPattern)!=-1)
					{
						selectedMenu = it["href"];
						found = true;
						break;
					}
				}
				if(found)
				{
					break;
				}
			}
		}
	}
	findSelectedMenu();
	</script>
</head>
<!-- body start -->

<body class="lang_<%=luci.i18n.context.lang%> <%- if node then %><%= striptags( node.title ) %><%- end %> <% if luci.dispatcher.context.authsession then %>logged-in<% end %>"
    data-layout='{"mode": "dark", "width": "fluid", "menuPosition": "fixed", "sidebar": { "color": "dark", "size": "default", "showuser": false}, "topbar": {"color": "dark"}, "showRightSidebarOnPageLoad": false}'>
	<!-- App js-->
	<script src="<%=media%>/assets/js/app.min.js"></script>
	<div id="loading_cover" class="loadingCover">
		<div id="lottie" style="width: 500px; height: 500px;"></div>
		<script>
			var animation = lottie.loadAnimation({
				container: document.getElementById('lottie'), // the DOM element
				renderer: 'svg',
				loop: true,
				autoplay: true,
				path: '<%=media%>/assets/js/loading.json' 
			});
		</script>
	</div>
	
	<!-- Begin page -->
    <div id="wrapper">

        <!-- Topbar Start -->
        <div class="navbar-custom">
            <div class="container-fluid">
                <ul class="list-unstyled topnav-menu float-end mb-0">

					<li class="dropdown d-none d-lg-inline-block" style="display:none" id="xhr_poll_status" title="自动刷新">
                        <a class="nav-link dropdown-toggle arrow-none waves-effect waves-light" data-toggle="autoRefresh"
                            href="#">
                            <i id="xhr_poll_status_off" style="display:none" class="fas fa-toggle-off noti-icon"  title="自动刷新：关闭"></i>
							<i id="xhr_poll_status_on" style="display:none" class="fas fa-toggle-on noti-icon text-info" title="自动刷新：启动"></i>
                        </a>
                    </li>
					<script>
						$('[data-toggle="autoRefresh"]').on("click", function (t) {
							t.preventDefault(),
							XHR.running() ? XHR.halt() : XHR.run()
						})
					</script>

                    <li class="dropdown d-none d-lg-inline-block">
                        <a class="nav-link dropdown-toggle arrow-none waves-effect waves-light" data-toggle="fullscreen"
                            href="#">
                            <i class="fe-maximize noti-icon"></i>
                        </a>
                    </li>

					<script>
						function t() {
							document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement || (console.log("pressed"), i("body").removeClass("fullscreen-enable"))
						}
						$('[data-toggle="fullscreen"]').on("click", function (t) {
							t.preventDefault(),
							$("body").toggleClass("fullscreen-enable"),
							document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement ? document.cancelFullScreen ? document.cancelFullScreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitCancelFullScreen && document.webkitCancelFullScreen() : document.documentElement.requestFullscreen ? document.documentElement.requestFullscreen() : document.documentElement.mozRequestFullScreen ? document.documentElement.mozRequestFullScreen() : document.documentElement.webkitRequestFullscreen && document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)
						}),
						document.addEventListener("fullscreenchange", t),
						document.addEventListener("webkitfullscreenchange", t),
						document.addEventListener("mozfullscreenchange", t)
					</script>

                    <li id="unchangedIndicator" class="dropdown notification-list topbar-dropdown hidden">
                        <a class="nav-link dropdown-toggle waves-effect waves-light" data-bs-toggle="dropdown" href="#"
                            role="button" aria-haspopup="false" aria-expanded="false" title="有尚未保存的系统配置，点击查看。">
                            <i class="fe-bell noti-icon"></i>
                            <span class="badge bg-danger rounded-circle noti-icon-badge">0</span>
                        </a>
                    </li>

					<script>
						if(typeof(unsavedChanges)!="undefined") {
							function goToUnSaved (e) {
								window.location.href = unsavedChanges["href"]
							}
							changesCount = unsavedChanges["count"]
							$("#unchangedIndicator > a > span").text(changesCount)
							$("#unchangedIndicator > a").click(function(e){
								goToUnSaved(e)
							})
							$("#unchangedIndicator > a > i").click(function(e){
								goToUnSaved(e)
							})
							$("#unchangedIndicator > a > span").click(function(e){
								goToUnSaved(e)
							})
							$("#unchangedIndicator").show()
						}
					</script>

                    <li class="dropdown notification-list topbar-dropdown">
                        <a class="nav-link dropdown-toggle nav-user me-0 waves-effect waves-light"
                            data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="false"
                            aria-expanded="false">
                            <img src="<%=media%>/assets/images/users/root.jpg" alt="user-image" class="rounded-circle">
                            <span class="pro-user-name ms-1">
                                ROOT <i class="mdi mdi-chevron-down"></i>
                            </span>
                        </a>
                        <div class="dropdown-menu dropdown-menu-end profile-dropdown ">
                            <a href="/cgi-bin/luci/admin/logout" class="dropdown-item notify-item">
                                <i class="fe-log-out"></i>
                                <span>退出</span>
                            </a>

                        </div>
                    </li>

                </ul>

                <!-- LOGO -->
                <div class="logo-box">
                    <a href="/cgi-bin/luci/" class="logo logo-dark text-center">
                        <span class="logo-sm">
                            <img src="<%=media%>/assets/images/Homelede2023-logo-sm.png" alt="" height="30">
                        </span>
                        <span class="logo-lg">
                            <img src="<%=media%>/assets/images/Homelede2023-logo-light.png" alt="" height="50">
                        </span>
                    </a>

                    <a href="/cgi-bin/luci/" class="logo logo-light text-center">
                        <span class="logo-sm">
                            <img src="<%=media%>/assets/images/Homelede2023-logo-sm.png" alt="" height="30">
                        </span>
                        <span class="logo-lg">
                            <img src="<%=media%>/assets/images/Homelede2023-logo-light.png" alt="" height="50">
                        </span>
                    </a>
                </div>

                <ul class="list-unstyled topnav-menu topnav-menu-left m-0 Line">
                    <li>
                        <button class="button-menu-mobile waves-effect waves-light">
                            <i class="fe-menu"></i>
                        </button>
						<script>
							$(".button-menu-mobile").on("click", function (t) {
							let body = $("body")
							t.preventDefault();
							var e = body.attr("data-sidebar-size");
							993 <= $(window).width() ? 
							"condensed" === e ? body.attr("data-sidebar-size","default") : body.attr("data-sidebar-size","condensed") : 
							(body.attr("data-sidebar-size","default"), body.toggleClass("sidebar-enable"))
						})
						</script>
                    </li>

                    <li>
                        <!-- Mobile menu toggle (Horizontal Layout)-->
                        <a class="navbar-toggle nav-link" data-bs-toggle="collapse"
                            data-bs-target="#topnav-menu-content">
                            <div class="lines">
                                <span></span>
                                <span></span>
                                <span></span>
                            </div>
                        </a>
                        <!-- End mobile menu toggle-->
                    </li>
                    <li class="dropdown d-none d-xl-block">
                        <a class="nav-link dropdown-toggle waves-effect waves-light" data-bs-toggle="dropdown" href="#"
                            role="button" aria-haspopup="false" aria-expanded="false">
                            固件资源
                            <i class="mdi mdi-chevron-down"></i>
                        </a>
                        <div class="dropdown-menu">
                            <!-- item-->
                            <a href="https://github.com/xiaoqingfengATGH/HomeLede/wiki/HomeLede%E7%89%88%E6%9C%AC%E5%8F%91%E5%B8%83" target="_blank" class="dropdown-item">
                                <i class="fe-briefcase me-1"></i>
                                <span>版本下载</span>
                            </a>

                            <!-- item-->
                            <a href="https://github.com/xiaoqingfengATGH/HomeLede/wiki" class="dropdown-item" target="_blank">
                                <i class="fe-user me-1"></i>
                                <span>Wiki</span>
                            </a>

                            <!-- item-->
                            <a href="https://github.com/xiaoqingfengATGH/HomeLede/wiki/HomeLede-%E9%87%8A%E6%94%BE%E8%AF%B4%E6%98%8E" class="dropdown-item" target="_blank">
                                <i class="fe-bar-chart-line- me-1"></i>
                                <span>更新记录</span>
                            </a>

                            <!-- item-->
                            <a href="https://drive.google.com/open?id=1iUDsgh1y5qouP48V61aTsswi3IekscKk" class="dropdown-item" target="_blank">
                                <i class="fe-settings me-1"></i>
                                <span>谷歌网盘</span>
                            </a>

                            <div class="dropdown-divider"></div>

                            <!-- item-->
                            <a href="https://t.me/t_homelede" class="dropdown-item" target="_blank">
                                <i class="fe-headphones me-1"></i>
                                <span>交流群</span>
                            </a>

                        </div>
                    </li>
                </ul>
                <div class="clearfix"></div>
            </div>
        </div>
        <!-- end Topbar -->

		<!-- ========== Left Sidebar Start ========== -->
        <div class="left-side-menu">

            <div class="h-100" id="homelede" v-cloak>
                <!--- Sidemenu -->
                <div id="sidebar-menu">
                    <ul id="side-menu">
                        <template v-for="(menu, index) in menus" :key="menu.index">
                            <li>
                                <a :href="menu.href" :data-title="menu['data-title']">
                                    <i v-if="menu.icon !=null" :class="menu.icon"></i>
                                    <span> {{menu.title}} </span>
                                    <span v-if="menu.subs !=null" class="menu-arrow"></span>
                                </a>
                                <div class="collapse" v-if="menu.subs !=null" :id="menu['data-title']">
                                    <ul class="nav-second-level">
                                        <li v-for="subMenu in menu.subs">
                                            <a :href="subMenu.href" :data-title="subMenu['data-title']">{{subMenu.title}}</a>
                                        </li>
                                    </ul>
                                </div>
                            </li>
                        </template>  
                    </ul>

                </div>
                <!-- End Sidebar -->

                <div class="clearfix"></div>
            </div>
			<script>
			if (typeof(topMenu) != "undefined") {
				var processedMenus = [];
				var totalIdx = 0;

				topMenu.menus.forEach(function(item,index,self){
					//item 遍历出的每一个元素
					//index 元素对应的下标
					//self 数组本身
					let level = 1;
					let cache = {};
					cache["data-title"] = item["data-title"];
					cache["href"] = item["href"];
					cache["title"] = item["title"];
					cache["level"] = level;
					cache["index"] = totalIdx++;
					processedMenus.push(cache)

					if(Object.hasOwn(item, 'subs'))
					{
						level = 2;
						item.subs.forEach(function(it,i,s){
							let sub = {};
							sub["data-title"] = it["data-title"];
							sub["href"] = it["href"];
							sub["title"] = it["title"];
							sub["level"] = level;
							sub["index"] = totalIdx++;
							processedMenus.push(sub)
						});
					}
				});

				const vm = Vue.createApp({
					data() {
						return topMenu;
					}
				}).mount('#homelede');
			}
			</script>
            <!-- Sidebar -left -->

        </div>
        <!-- Left Sidebar End -->
<script>
if (typeof(topMenu) != "undefined") {
	jQuery(function()
	{
		jQuery("#side-menu > li").each(function(){
			var $this = jQuery(this);
			var subContainer = $this.children("div");
			var a = $this.children("a")
			var arrow = a.children("span.menu-arrow")
			let hasSub = $this.find("ul.nav-second-level").length > 0;
			if(hasSub)
			{
				a.click(function(){
					if(!a.next().is(':visible'))
					{
						arrow.css("transform", "rotate(90deg)");
					}
					else
					{
						arrow.css("transform", "");
					}
					a.toggleClass("collapsed")
					subContainer.slideToggle(400);
				});
			}
		});

		$("#side-menu a").each(function () {
			var t = window.location.href.split(/[?#]/)[0];
			const base = "/cgi-bin/luci"
			const baseIdx = t.indexOf(base)
			const funcPath = t.slice(baseIdx + base.length)
			const parts = funcPath.split("/");
			const extractedParts = parts.slice(0, 4);
			const menuRegistedFuncPath = extractedParts.join("/");
			const currentPath = t.slice(0,baseIdx) + base + menuRegistedFuncPath
			if (this.href == currentPath) {
				$(this).addClass("active"),
				$(this).parent().addClass("menuitem-active"),
				$(this).parent().parent().parent().addClass("show"),
				$(this).parent().parent().parent().parent().addClass("menuitem-active");
				var e = $(this).parent().parent().parent().parent().parent().parent();
				"sidebar-menu" !== e.attr("id") && e.addClass("show"),
				$(this).parent().parent().parent().parent().parent().parent().parent().addClass("menuitem-active");
				var i = $(this).parent().parent().parent().parent().parent().parent().parent().parent().parent();
				"wrapper" !== i.attr("id") && i.addClass("show");
				var a = $(this).parent().parent().parent().parent().parent().parent().parent().parent().parent().parent();
				a.is("body") || a.addClass("menuitem-active")
			}
		})

		if(typeof luciLocation != "undefined")
		{
			new SimpleBar($("#homelede")[0]);
		}
	})
}
</script>
		<!-- ============================================================== -->
        <!-- Start Page Content here -->
        <!-- ============================================================== -->

        <div class="content-page">
            <div class="content">
                <!-- Start Content-->
                <div class="container-fluid">

				<%- if luci.sys.process.info("uid") == 0 and luci.sys.user.getuser("root") and not luci.sys.user.getpasswd("root") then -%>
				<div class="alert-message warning">
						<h4><%:No password set!%></h4>
						<p><%:There is no password set on this router. Please configure a root password to protect the web interface and enable SSH.%></p>
						<div class="right"><a class="btn" href="<%=url("admin/system/admin")%>"><%:Go to password configuration...%></a></div>
				</div>
				<%- end -%>

				<noscript>
					<div class="alert-message warning">
						<h4><%:JavaScript required!%></h4>
						<p><%:You must enable JavaScript in your browser or LuCI will not work properly.%></p>
					</div>
				</noscript>

				<!-- start page title -->
				<div class="row">
					<div class="col-12">
						<div id="homelede_page_desc_popup" class="toast fade hide" role="alert" aria-live="assertive" aria-atomic="true" data-bs-toggle="toast">
							<div class="toast-header">
								<img src="<%=media%>/assets/images/Homelede2023-logo-sm.png" alt="brand-logo" height="12" class="me-1">
								<strong class="me-auto">PAGETITLE</strong>
								<small></small>
								<button type="button" class="btn-close ms-2" data-bs-dismiss="toast" aria-label="Close"></button>
							</div>
							<div class="toast-body">
								PAGEDESC
							</div>
						</div>
						<div class="page-title-box">
							<div>
								<span id="homelede_page_title" class="page-title mx-1" style="font-size:1.25rem">加载中...</span>
								<span id="homelede_page_desc"></span>
							</div>
							<div>
								<ol id="homelede_breadcrumb" class="breadcrumb m-0">
								</ol>
								<script>
									var PageLevel2Title
									function buildBreadCrumb() {
										let level1,level2,level3
										let level2Url,level3Url
										let searchPattern = '/' + luciLocation[0] + '/' + luciLocation[1]+ '/' + luciLocation[2];
										for(var item of topMenu.menus) {
											if(Object.hasOwn(item, 'subs'))
											{
												let found = false;
												for(var it of item.subs)
												{
													if(it["href"] && it["href"].indexOf(searchPattern)!=-1)
													{
														level1 = item["title"]
														level2 = it["title"]
														PageLevel2Title = level2
														level2Url = it["href"]
														if(luciLocation.length==4) {
															searchPattern = searchPattern + "/" + luciLocation[3];
															for(var l3m of level3Menu) {
																if(l3m["href"] && l3m["href"].indexOf(searchPattern)!=-1)
																{
																	level3 = l3m["title"]
																	level3Url = l3m["href"]
																	break
																}
															}
														}
														found = true;
														break;
													}
												}
												if(found)
												{
													break;
												}
											}
										}
										let breadCrumb = $("#homelede_breadcrumb")
										breadCrumb.append('<li class="breadcrumb-item"><a href="/cgi-bin/luci/">Homelede</a></li>')
										if(typeof(level1)!="undefined")
										{
											breadCrumb.append('<li class="breadcrumb-item"><a href="javascript: void(0);">' + level1 + '</a></li>')
										}
										if(typeof(level2)!="undefined")
										{
											if(typeof(level3)!="undefined") {
												breadCrumb.append('<li class="breadcrumb-item"><a href="' + level2Url + '">' + level2 + '</a></li>')
												breadCrumb.append('<li class="breadcrumb-item active"><a href="' + level3Url + '">' + level3 + '</a></li>')
											} else {
												breadCrumb.append('<li class="breadcrumb-item active"><a href="' + level2Url + '">' + level2 + '</a></li>')
											}
										}
	
									}
									buildBreadCrumb();
								</script>
							</div>
						</div>
					</div>
				</div>
				<!-- end page title -->
				<div class="row">
					<div class="col-12" id="thirdLevelMenuApp">
						<div class="card-header">
						<ul class="nav nav-pills card-header-pills mb-0">
							<li class="nav-item" v-for="(line,index) in thirdLevelMenu" :key="line.name" @click="goToUrl($event)">
								<a :href="line.href" data-bs-toggle="tab" aria-expanded="false" class="nav-link" :class="line.active?'active':''">
									{{line.title}}
								</a>
							</li>
						</ul>
						</div>
					</div>
				</div>